#ifndef	_OUTPUTLINE_H_
#define	_OUTPUTLINE_H_

#include <String.h>
#include	"Pannable.h"
// Aggiungere: filtro, e funzione di buffer DSP-engine. e stack VST.

#define	 FRAMES_NUM		1024
#define	 FRAMESIZE		8

#include <List.h>
#include <Handler.h>
#include <Message.h>

class	VSTItem;
class Mixer;

#define	MAXPLUG	8

class OutputLine: public Pannable
{
	
	protected:
	friend Mixer;	
					OutputLine(const char* n);
	public:					
		virtual			~OutputLine();
	
	void			ClearBuffer(int32 size=FRAMES_NUM*FRAMESIZE);
	
	float**			getBuffer(){ return stream;}
	void 			AddBuffer(float**from,size_t size,int32 spiaz,float factor=1.0);
	float*			MeltBuffer(float**to,size_t size);
	void			ProcessBuffer(size_t frames);
	void			Enable(bool b){enable=b;};
	bool			IsEnable(){ return enable;}
	void			setTempo(int t);
	const char*		getName(){ return name.String();};
	
	VSTItem	*vst[MAXPLUG];	//da rendre PRIVATE
	
	
	/*METER not portable code*/
	void		setHandler(BHandler*);
	
	private:
		
		BString	name;
			
		float *stream[2]; 
		bool	enable;
		
		/*METER not portable code*/	
		BHandler*	hand;
		float		top[2];
		
		
			
};

#endif
//-
